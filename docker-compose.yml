version: '3.5'
services:

  django:
    container_name: "django_backend"
    restart:  on-failure
    depends_on:
      - postgres

    env_file:
      - .env

    build:
      context: ./webpage
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    networks:
      trans_net:
        ipv4_address: 192.130.0.3
    # volumes:
    #   - django_game_vol:/app/game
    #   - django_home_vol:/app/Home


  postgres:
    container_name: "postgres_db"
    image: postgres:alpine3.18
    restart:  always
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgres/data
#    ports: DO_NOT_REMOVE -> Pour exposition public (potentiel)
#      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgres/
    networks:
      trans_net:
        ipv4_address: 192.130.0.2

  redis:
    container_name: "redis_cache"
    build:
      context: ./redis
      dockerfile: ./Dockerfile
    restart:  always
    env_file:
      - .env
    #volumes:
    #  - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      trans_net:
        ipv4_address: 192.130.0.4

networks:
  trans_net:
    name: trans_net
    driver: bridge
    ipam:
      config:
        - subnet: 192.130.0.0/24
          gateway: 192.130.0.1

volumes:
  postgres_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /tmp/postgres/volume/
  # django_game_vol:
  #   driver: local
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: ./webpage/game
  # django_home_vol:
  #   driver: local
  #   driver_opts:
  #     o: bind
  #     type: none
  #     device: ./webpage/Home
